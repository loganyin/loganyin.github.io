<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>FinalFramework</title>
    <link href="/2023/03/24/FinalFramework/"/>
    <url>/2023/03/24/FinalFramework/</url>
    
    <content type="html"><![CDATA[<table>    <tbody>    <tr>    <td align="center" width="150px"><img src="Screenshot/screenshot.jpg" width="128"/>    </td>    <td>#### 开发目标 <br/>FinalFramework（简称FF）的目标是打造独立游戏开发的闭环，从客户端、服务器端+DB、各种独立工具链（剧情编辑器、打表、ProtoBuff等）(项目素材禁止商用！！)    <h4 id="运行环境（版本太低的需要自力更生了）"><a href="#运行环境（版本太低的需要自力更生了）" class="headerlink" title="运行环境（版本太低的需要自力更生了）"></a>运行环境（版本太低的需要自力更生了）<br/></h4><p>FirClient： Unity 2019.4.40f1 (64-bit) + Visual Studio 2019  <br/><br>FirServer:  Smartfoxserver + MongoDB 4.29 + MySQL 5.7 + Redis 5.0.14.1 + VSCode  <br/><br>FirToolkit: Visual Studio 2019<br>    </td><br>    </tr><br>    </tbody></p></table><p><a href="https://pan.baidu.com/s/1U7jD7KyJwNajkspYW7F5uw?pwd=bpkb" target="_blank">Smartfoxserver相关软件 - 网盘下载&#x3D;&#x3D;&#x3D;!!!</a><br/><br><a href="https://www.cnblogs.com/code-boy/p/4883402.html">SmartFoxServer Extension调试</a><br/></p><h4 id="框架工具介绍："><a href="#框架工具介绍：" class="headerlink" title="框架工具介绍："></a>框架工具介绍：</h4><p>（1）enumtool.exe 双端(C#&#x2F;JAVA)共用枚举工具生成器，枚举类型定义在<a href="Resource/Enum.txt">Resource&#x2F;Enum.txt</a><br/><br>（2）protoname.exe 双端(C#&#x2F;JAVA)共用网络协议名生成器，文件定义在<a href="Resource/Protocal.txt">Resources&#x2F;Protocal.txt</a><br/><br>（3）protos.bat 双端(C#&#x2F;JAVA)共用网络协议（ProtoBuff3）生成器，文件定义在Protos子目录里面。<br/><br>（4）storyeditor.exe 剧情编辑器。<br/><br>（5）tabletool.exe 双端(C#&#x2F;JAVA)共用Excel表格生成器。<br/></p><h4 id="框架工作流使用介绍："><a href="#框架工作流使用介绍：" class="headerlink" title="框架工作流使用介绍："></a>框架工作流使用介绍：</h4><p>（1）proto添加消息，定义req、res结构，打协议（自动copy到客户端、服务器端pb目录） <br/><br>（2）在策划Excel目录定义数据表，然后打表（自动copy到客户端+服务器Table目录） <br/><br>（3）在FirServer里添加对于模块Handler（消息），Model（数据库），Manager（管理器） <br/><br>（4）在前端lua添加MsgHandler，Module，Manager，就可以接入View逻辑了。<br/><br>（5）<a href="FirServer/README.md">服务器端开发工作流注意事项</a>。<br/><br>（6）客户端设置里面Assets&#x2F;Resources&#x2F;GameSettings.asset，NetworkMode默认开启，若不需要SFS关闭即可。<br/><br>（7）tabletool.exe打表工具生成双端代码，双端数据文件路径，打开工具即可查看，如图所示：<br><img src="Screenshot/tabletool.png" /></p><h4 id="2023-03-18-更新日志："><a href="#2023-03-18-更新日志：" class="headerlink" title="2023.03.18 更新日志："></a>2023.03.18 更新日志：</h4><p>（1）去掉自带的FirServer，支持Smartfoxserver。</p><h4 id="2021-02-23-更新日志："><a href="#2021-02-23-更新日志：" class="headerlink" title="2021.02.23 更新日志："></a>2021.02.23 更新日志：</h4><p>（1）开源多端共享工程FirCommon，公共定义都放此工程。</p><h4 id="2021-02-20-更新日志："><a href="#2021-02-20-更新日志：" class="headerlink" title="2021.02.20 更新日志："></a>2021.02.20 更新日志：</h4><p>（1）升级打表工具TableTool V2。<br>（2）升级剧情编辑器StoryEditor V2。 </p><h4 id="2021-02-11-更新日志："><a href="#2021-02-11-更新日志：" class="headerlink" title="2021.02.11 更新日志："></a>2021.02.11 更新日志：</h4><p>（1）梳理了前后端通讯流程，客户端工程设置里面有“NetworkMode”,默认关闭。 </p><h4 id="框架特征："><a href="#框架特征：" class="headerlink" title="框架特征："></a>框架特征：</h4><p>（0）采用tolua53分支代码(lua5.3.5版本) + pbc3.0 + sproto最新版。<br>（1）逻辑层、视图层代码分离，中间使用消息组件通信消息，可以完全隔离。<br>（2）仿照UE4+Unlua的蓝图式组件访问方式，彻底抛弃了Lua View层导出代码，代码简洁性能更好。<br>（3）Lua层代码OOP架构方式，完全的单向访问（Lua-&gt;C#）避免交叉访问带来的弊端。<br>（4）基于DLL插件式的配套服务器端框架，游戏只需要封装到一个程序集，完全不入侵的服务器端框架。<br>（5）完善的Excel打表工作流工具，你可以直接根据打表规则，生成客户端表结构、服务端表结构。<br>（6）完善的Protobuf生成工作流工具，你可以生成客户端（C#+LuaPB），服务器端C#。<br>（7）一个可以用于开发独立游戏的独立于Unity3D的剧情编辑器。<br>（8）Lua层的自定义组件库，你可以完全不需要修改C#的情况下，新增或者修改自定义组件。<br>（9）可视化的资源打包管理系统。<br>（10）可视化资源导入管线设置。<br>（11）场景事件管理系统，整个框架的战斗完全是基于场景事件驱动。<br>（12）一个简单版本的Patch系统。<br>（13）红点系统（实现一个红点通用框架）。  作者：DustYang</p><h4 id="已知问题"><a href="#已知问题" class="headerlink" title="已知问题"></a>已知问题</h4><p>（1）英雄战斗状态机会停下。（已修复）npcData.skillConsume决定是否要释放技能。  <br/><br>（2）Unity高版本的Visual Scripting会跟项目自带的ZIP组件冲突，可选要移除一个。<br/><br>（3）SFS安装启动后，中文乱码解决办法:登录后台管理<a href="http://localhost:8080，进入Administration">http://localhost:8080，进入Administration</a> Tool 2X后，用户名+密码：sfsadmin，Server Configurator&#x2F;JVM Settings&#x2F;设置成-Dfile.encoding&#x3D;GBK，重启即可。<br/></p>]]></content>
    
    
    <categories>
      
      <category>ET</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ET</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>EGamePlay</title>
    <link href="/2023/03/24/EGamePlay/"/>
    <url>/2023/03/24/EGamePlay/</url>
    
    <content type="html"><![CDATA[<h1 id="EGamePlay"><a href="#EGamePlay" class="headerlink" title="EGamePlay"></a><em><strong>EGamePlay</strong></em></h1><img src="Readme/EGamePaly_logo.png" width="60%"><hr><p><a href="https://unity3d.com/get-unity/download/archive"><img src="https://img.shields.io/badge/Unity-2021.2.0f1-333333.svg?logo=unity" alt="Unity Version: 2021.2.0f1"></a> <a href="https://github.com/m969/EGamePlay/projects/1"><img src="https://img.shields.io/badge/status-work--in--progress-orange" alt="Status: Work-in-progress"></a></p><hr><h2 id="知乎文章："><a href="#知乎文章：" class="headerlink" title="知乎文章："></a>知乎文章：</h2><ul><li><a href="https://zhuanlan.zhihu.com/p/272216809">0、如何实现一个灵活、通用的战斗（技能）系统——序章</a></li><li><a href="https://zhuanlan.zhihu.com/p/269901872">1、如何实现一个灵活、通用的战斗（技能）系统——数值系统</a></li><li><a href="https://zhuanlan.zhihu.com/p/274795206">2、如何实现一个灵活、通用的战斗（技能）系统——数值系统（升级版）</a></li><li><a href="https://zhuanlan.zhihu.com/p/272865602">3、如何实现一个灵活、通用的战斗（技能）系统——战斗行动机制</a></li><li><a href="https://zhuanlan.zhihu.com/p/284192989">4、如何实现一个灵活、通用的战斗（技能）系统——战斗实体</a></li><li><a href="https://zhuanlan.zhihu.com/p/292590253">5、如何实现一个灵活、通用的战斗（技能）系统——能力Ability</a></li><li><a href="https://zhuanlan.zhihu.com/p/334825494">6、如何实现一个灵活、通用的战斗（技能）系统——Status状态效果</a></li><li><a href="https://zhuanlan.zhihu.com/p/340447052">7、如何实现一个灵活、通用的战斗（技能）系统——Skill技能</a></li><li><a href="https://zhuanlan.zhihu.com/p/341431038">8、如何实现一个灵活、通用的战斗（技能）系统——技能效果</a></li><li><a href="https://zhuanlan.zhihu.com/p/343624199">9、如何实现一个灵活、通用的战斗（技能）系统——Entity-Component模式</a></li></ul><hr><h2 id="该项目使用了以下收费插件："><a href="#该项目使用了以下收费插件：" class="headerlink" title="该项目使用了以下收费插件："></a>该项目使用了以下收费插件：</h2><ul><li><a href="https://assetstore.unity.com/packages/tools/visual-scripting/dotween-pro-32416">DOTween Pro</a> （简单易用强大的动画插件）</li><li><a href="https://assetstore.unity.com/packages/tools/utilities/odin-inspector-and-serializer-89041">Odin Inspector</a> （编辑器扩展、工作流改善）</li><li><a href="https://assetstore.unity.com/packages/tools/animation/animancer-pro-116514">Animancer Pro</a> （基于Playable的简单强大的Animation解决方案）</li></ul><hr><h2 id="如何将EGamePlay移植到别的Unity工程"><a href="#如何将EGamePlay移植到别的Unity工程" class="headerlink" title="如何将EGamePlay移植到别的Unity工程"></a>如何将EGamePlay移植到别的Unity工程</h2><p>如果要将EGamePlay移植到自己的Unity工程里，首先要确保Odin Inspector插件已经在工程中，然后再将以下目录拖过去即可：</p><ul><li>EGamePlay&#x2F;Assets&#x2F;Editor</li><li>EGamePlay&#x2F;Assets&#x2F;EGamePlay</li><li>EGamePlay&#x2F;Assets&#x2F;EGamePlay.Unity</li></ul><p>如果要使用Excel配置流程的话，还需要将 EGamePlay&#x2F;Excel 目录复制过去，再生成配置</p><hr><img src="Readme/EGamePlay.gif" width="60%"><img src="Readme/EGamePlayTurn.gif" width="60%"><hr><details><summary>CombatEntity</summary>CombatEntity</details><details><summary>Attribute、Numeric</summary>NumericFloat</details><details><summary>Ability</summary>Ability</details><details><summary>StatusAbility</summary>StatusAbility</details><details><summary>SkillAbility</summary>SkillAbility</details><details><summary>AbilityEffect</summary>AbilityEffect</details><details><summary>ExpressionParser</summary>ExpressionParser</details><hr><h2 id="基于Odin和ScriptableObject实现的灵活的技能、buff配置工具"><a href="#基于Odin和ScriptableObject实现的灵活的技能、buff配置工具" class="headerlink" title="基于Odin和ScriptableObject实现的灵活的技能、buff配置工具"></a>基于Odin和ScriptableObject实现的灵活的技能、buff配置工具</h2><p><img src="/Readme/ConfigImage.png" alt="SkillConfigImage.png"></p><hr><h2 id="技能ScriptableObject配置和Excel配置流程切换命令"><a href="#技能ScriptableObject配置和Excel配置流程切换命令" class="headerlink" title="技能ScriptableObject配置和Excel配置流程切换命令"></a>技能ScriptableObject配置和Excel配置流程切换命令</h2><img src="Readme/Tools_Excel.png" width="60%"><h3 id="技能Excel配置"><a href="#技能Excel配置" class="headerlink" title="技能Excel配置"></a>技能Excel配置</h3><p><img src="/Readme/SkillExcel.png" alt="SkillConfigImage.png"></p><h3 id="状态Excel配置"><a href="#状态Excel配置" class="headerlink" title="状态Excel配置"></a>状态Excel配置</h3><p><img src="/Readme/StatusExcel.png" alt="SkillConfigImage.png"></p><h3 id="技能效果Excel配置"><a href="#技能效果Excel配置" class="headerlink" title="技能效果Excel配置"></a>技能效果Excel配置</h3><p><img src="/Readme/SkillEffectsExcel.png" alt="SkillConfigImage.png"></p><hr><h1 id="EGamePlay战斗框架技术讨论交流qq群：763696367"><a href="#EGamePlay战斗框架技术讨论交流qq群：763696367" class="headerlink" title="EGamePlay战斗框架技术讨论交流qq群：763696367"></a>EGamePlay战斗框架技术讨论交流qq群：763696367</h1><p>对战斗感兴趣的同学可以进群一起探讨更合适、高效的战斗框架实现</p><hr><p>对EGamePlay有任何疑问或建议可以进群反馈，或是提在<a href="https://github.com/m969/EGamePlay/discussions">Discussions</a></p><hr><h2 id="其他类似项目"><a href="#其他类似项目" class="headerlink" title="其他类似项目"></a>其他类似项目</h2><ul><li><a href="https://github.com/KrazyL/SkillSystem-3">https://github.com/KrazyL/SkillSystem-3</a> (Dota2 alike Skill System Implementation for KnightPhone)</li><li><a href="https://github.com/weichx/AbilitySystem">https://github.com/weichx/AbilitySystem</a></li><li><a href="https://github.com/dongweiPeng/SkillSystem">https://github.com/dongweiPeng/SkillSystem</a> (丰富的接口可便于使用扩展 完整的技能效果流程【如流程图】 配套的技能管理器 自定义的技能数据表)</li><li><a href="https://github.com/sjai013/UnityGameplayAbilitySystem">https://github.com/sjai013/UnityGameplayAbilitySystem</a> (The approach for this is taken from that used by Unreal’s Gameplay Ability System, but implemented in Unity using the Data-Oriented Technology Stack (DOTS) where possible.)</li><li><a href="https://github.com/dx50075/SkillSystem">https://github.com/dx50075/SkillSystem</a> (skill system for unity ， 思路 <a href="http://blog.csdn.net/qq18052887/article/details/50358463">http://blog.csdn.net/qq18052887/article/details/50358463</a><br>技能描述文件如下 skill(1000) &#x2F;&#x2F;技能1 { FaceToTarget(0) PlayAnimation(1,Skill_1) Bullet(1.3,Bullet,7) PlayEffect(0,Explode8,3) })</li></ul><hr><h2 id="参考引用"><a href="#参考引用" class="headerlink" title="参考引用"></a>参考引用</h2><ul><li><a href="https://github.com/egametang/ET">https://github.com/egametang/ET</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>ET</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ET</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>NICE-Lua</title>
    <link href="/2023/03/24/NICE-Lua/"/>
    <url>/2023/03/24/NICE-Lua/</url>
    
    <content type="html"><![CDATA[<h1 id="NICE-Lua"><a href="#NICE-Lua" class="headerlink" title="NICE-Lua"></a>NICE-Lua</h1><p><a href="https://justin-sky.github.io/Nice-Lua">中文文档</a></p><p>Road Map ：</p><ul><li>资源管理修改为Addressables（完成）</li><li>UI框架支持MVVM (完成)</li><li>渲染管线修改为URP（完成）</li><li>网络模块采用lua-protobuf，添加断线重连，弱网络处理等（完成）</li><li>DOTS地图系统</li><li>新手引导系统</li><li>任务系统</li><li>聊天系统</li><li>红点系统</li><li>更多功能更新</li></ul><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>如果要在android或ios中发布测试项目，请下载 <a href="https://github.com/Justin-sky/Nice-Build">https://github.com/Justin-sky/Nice-Build</a>  并自行编译各平台库</p><h2 id="运行环境"><a href="#运行环境" class="headerlink" title="运行环境"></a>运行环境</h2><p>请在Unity2019.4以上环境运行</p><p>Clone<a href="https://github.com/Justin-sky/Nice-ET">服务器：https://github.com/Justin-sky/Nice-ET </a>代码到本地，VS安装.net core 3.0开发环境</p><p><a href="https://zhuanlan.zhihu.com/p/184846532">Addressable配置说明文档</a></p><p><a href="https://zhuanlan.zhihu.com/p/190182995">Flatbuffer使用说明文档</a></p><p>QQ群：346340389</p>]]></content>
    
    
    <categories>
      
      <category>ET</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ET</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2023/03/21/hello-world/"/>
    <url>/2023/03/21/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
